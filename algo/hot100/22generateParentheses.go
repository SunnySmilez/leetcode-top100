package hot100

/*

22. 括号生成:https://leetcode-cn.com/problems/generate-parentheses/
数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。
示例 1：
输入：n = 3
输出：["((()))","(()())","(())()","()(())","()()()"]

示例 2：
输入：n = 1
输出：["()"]
*/
// 判断括号是否有效的规则: 判断左括号和右括号的数量满足两个条件，在整个过程中，左括号的数量一定要大于右括号的数量；最后的时候左右括号数量必须相等
// 官方描述：为了检查序列是否有效，我们遍历这个序列，并使用一个变量 balance 表示左括号的数量减去右括号的数量。如果在遍历过程中 balance 的值小于零，或者结束时 balance 的值不为零，那么该序列就是无效的，否则它是有效的
// 感觉又是个递归的解法
func GenerateParenthesis(n int) []string {
	return nil
}
